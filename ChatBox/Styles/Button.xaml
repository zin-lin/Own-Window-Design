<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ChatBox">

   
        <ResourceDictionary.MergedDictionaries>

            <!-- Order is important-->
            <ResourceDictionary Source="Colors.xaml"/>
            <ResourceDictionary Source="fonts.xaml"/>
           


        </ResourceDictionary.MergedDictionaries>
    
    <!-- Hoverless Button -->

    <Style TargetType="{x:Type Button}" x:Key="Hoverless">
        <Setter Property="Background" Value="Transparent"/>


        <Setter Property="BorderThickness" Value="0"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>

                    </Border>
                    
                </ControlTemplate>
            </Setter.Value>
           
        </Setter>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>

        

    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource Hoverless}" x:Key="SystemIconButton">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>

        <Setter Property="Padding" Value="10"/>
     
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="WindowControlButton" BasedOn="{StaticResource BasicStyle}">

        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>

        <Setter Property="Padding" Value="10"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundVeryDarkBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="LayoutTransform">
            <Setter.Value>

                <ScaleTransform ScaleX="1.5"/>
            </Setter.Value>
            
            
        </Setter>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>

                    </Border>

                </ControlTemplate>
            </Setter.Value>

        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">

                <Setter Property="Background" Value="{StaticResource BackgroundLightBrush}"/>
            </Trigger>
            
        </Style.Triggers>

    </Style>
    
    <!-- Window Close-->
    <Style TargetType="{x:Type Button}" x:Key="WindowCloseButton" BasedOn="{StaticResource WindowControlButton}">

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">

                <Setter Property="Background" Value="Red"
                />

                <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}"
                />

            </Trigger>

        </Style.Triggers>
    </Style>


    <Style x:Key="DefaultThemed"  TargetType="{x:Type Button}" >
        <Setter Property="Background" Value="{StaticResource ThemedColorBrush}"/>
        <Setter Property="FontSize" Value="{StaticResource FSReg}"/>

        <Setter Property="FontFamily" Value="{StaticResource Bold}"  />
        <Setter Property="Foreground" Value="{StaticResource BackgroundLightBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="BorderRadius" Background="{TemplateBinding Background}" CornerRadius="10" 
                       Padding="{TemplateBinding Padding}" Margin="{TemplateBinding Margin}"     
                            >

                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"></ContentPresenter>
                        
                    </Border>
                    
                </ControlTemplate>
                
                
            </Setter.Value>
            
            
        </Setter>


        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">

                <Setter Property="Background" Value="{StaticResource LukeLightSaberDegobah}"
                />

                <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}"
                />

            </Trigger>

            <Trigger Property="IsPressed" Value="True">

                <Setter Property="Background" Value="{StaticResource OrageColorBrush}"
                />

                <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}"
                />

            </Trigger>

        </Style.Triggers>


    </Style>


    <Style x:Key="Trans" BasedOn="{StaticResource BasicStyle }" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource BackgroundLightBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource Reg}"/>
        <Setter Property="FontSize" Value="{StaticResource FSReg}"/>


        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="BorderRadius" Background="{TemplateBinding Background}" CornerRadius="10" 
                       Padding="{TemplateBinding Padding}" Margin="{TemplateBinding Margin}" 
                           
                            >

                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" ></ContentPresenter>

                    </Border>

                </ControlTemplate>


            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource XoxBrush}"/>
            </Trigger>


        </Style.Triggers>


    </Style>

</ResourceDictionary>